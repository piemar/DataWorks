# =============================================================================
# VOLVO DATA FRAMEWORK - SIMPLIFIED CONFIGURATION
# =============================================================================
# 
# This file demonstrates the new profile-based configuration system.
# Instead of managing 100+ configuration parameters, you now only need to:
# 1. Choose a profile (data-ingest, data-migration, or dev)
# 2. Set your database connection strings
# 3. Optionally override specific settings
#
# =============================================================================

# =============================================================================
# PROFILE SELECTION (REQUIRED)
# =============================================================================
# Choose one of three profiles based on your use case:
#
# data-ingest    - High-speed data generation (40k+ docs/s)
# data-migration - High-speed migration with stability (4k-8k docs/s)  
# dev           - Development and testing (minimal resources)
# =============================================================================

FRAMEWORK_PROFILE=data-migration

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# These are the only required settings - everything else comes from the profile

# Source Database (Cosmos DB)
GEN_DB_CONNECTION_STRING="mongodb://your-account:YOUR_PASSWORD@your-account.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@your-account@"
GEN_DB_NAME=volvo-service-orders
GEN_DB_COLLECTION=serviceorders

# Target Database (MongoDB Atlas)
MIG_TARGET_DB_CONNECTION_STRING="mongodb+srv://your-username:YOUR_PASSWORD@your-cluster.mongodb.net/?retryWrites=false&w=0&appName=YourCluster"
MIG_TARGET_DB_NAME=volvo-service-orders
MIG_TARGET_DB_COLLECTION=serviceorders

# =============================================================================
# OPTIONAL OVERRIDES
# =============================================================================
# You can override any profile setting by adding it here.
# For example, to use a larger batch size in dev mode:

# MIG_BATCH_SIZE=5000
# GEN_BATCH_SIZE=10000

# =============================================================================
# PROFILE DESCRIPTIONS
# =============================================================================
#
# ðŸš€ data-ingest Profile:
#   - Purpose: Maximum speed data generation
#   - Batch Size: 40,000 documents
#   - Workers: 16 generation, 24 write workers
#   - Connection Pool: 600-800 connections
#   - Use Case: High-volume data generation
#
# âš¡ data-migration Profile:
#   - Purpose: High-speed migration with stability
#   - Batch Size: 15,000 documents
#   - Workers: 4 migration, 8 max workers
#   - Connection Pool: 100 max connections (conservative)
#   - Use Case: Reliable data migration
#
# ðŸ§ª dev Profile:
#   - Purpose: Development and testing
#   - Batch Size: 2,000-5,000 documents
#   - Workers: 2-4 workers
#   - Connection Pool: 20 max connections
#   - Use Case: Testing framework functionality
#
# =============================================================================
# QUICK START EXAMPLES
# =============================================================================
#
# 1. Development Testing:
#    FRAMEWORK_PROFILE=dev
#    # Set database connections above
#    # Run: source venv/bin/activate && FRAMEWORK_PROFILE=dev python flexible_migrate.py --strategy user_defined/strategies/volvo_strategy.py
#
# 2. High-Speed Migration:
#    FRAMEWORK_PROFILE=data-migration
#    # Set database connections above
#    # Run: source venv/bin/activate && FRAMEWORK_PROFILE=data-migration python flexible_migrate.py --strategy user_defined/strategies/volvo_strategy.py
#
# 3. High Speed Data Generation:
#    FRAMEWORK_PROFILE=data-ingest
#    # Set database connections above
#    # Run: source venv/bin/activate && FRAMEWORK_PROFILE=data-ingest python flexible_generator.py --source user_defined/templates/service_orders/service_order_template.json
#
# =============================================================================
# ADVANCED USAGE
# =============================================================================
#
# To see all available profiles:
# python -c "from framework.config.profiles import list_profiles; print(list_profiles())"
#
# To see profile details:
# python -c "from framework.config.profiles import show_profile_info; print(show_profile_info('data-migration'))"
#
# To validate your configuration:
# python -c "from framework.config.manager import config_manager; print(config_manager.validate_current_config())"
#
# =============================================================================